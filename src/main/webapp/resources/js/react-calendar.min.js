!function(){"use strict";var e=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],t=Backbone.Model.extend({defaults:{date:new Date,summary:"date"},isSameDay:function(e){var t=this.get("date");return t.getYear()===e.getYear()&&t.getMonth()===e.getMonth()&&t.getDate()===e.getDate()}}),a=Backbone.Collection.extend({model:t}),n=function(){var e=new t({date:new Date(2015,3,1),summary:"first of April"}),n=new t({date:new Date,summary:"today"});return new a([e,n])}(),r=React.createClass({displayName:"CalendarEntry",propTypes:{data:React.PropTypes.instanceOf(t)},render:function(){return React.createElement("div",{className:"entry"},React.createElement("span",{className:"fa fa-caret-right"},this.props.data.get("summary")))}}),s=React.createClass({displayName:"CalendarCell",propTypes:{onClick:React.PropTypes.func,date:React.PropTypes.instanceOf(Date),inFocussedMonth:React.PropTypes.bool,data:React.PropTypes.array},onClick:function(e){this.props.onClick(e.nativeEvent,this.props.date.toLocaleDateString())},render:function(){return React.createElement("td",{onClick:this.onClick,className:"calendarCell"+(this.props.inFocussedMonth?"":" shadowCell")},React.createElement("div",{className:"calendarCellBox"},React.createElement("div",{className:"date"},this.props.children),this.props.data.map(function(e,t){return React.createElement(r,{data:e,key:"CalendarEntry_"+t})})))}}),c=React.createClass({displayName:"ColHead",render:function(){return React.createElement("th",null,this.props.day)}}),o=React.createClass({displayName:"CalendarMonth",propTypes:{year:React.PropTypes.number,month:React.PropTypes.number,onClick:React.PropTypes.func,weekDays:React.PropTypes.arrayOf(React.PropTypes.string),data:React.PropTypes.instanceOf(a)},getInitialState:function(){this.firstDateOfMonth=new Date(this.props.year,this.props.month,1);var e=this.firstDateOfMonth.getDay();return this.dayOffset=(e-1)%7,this.rowIndices=[1,2,3,4,5,6],{data:this.props.data}},componentWillMount:function(){this.props.data.on("change add",function(){this.forceUpdate()}.bind(this))},componentWillUnmount:function(){this.props.data.off("change")},render:function(){return React.createElement("div",null,React.createElement("table",{className:"calendarTable"},React.createElement("thead",null,React.createElement("tr",null,this.props.weekDays.map(function(e){return React.createElement(c,{day:e,key:"ColHead_"+e.toString()})}))),React.createElement("tbody",null,this.rowIndices.map(function(e,t){return React.createElement("tr",{key:"CalendarMonth-row_"+t},this.props.weekDays.map(function(e,a){var n=7*t+a-this.dayOffset,r=new Date(this.firstDateOfMonth.getTime());return r.setDate(n),React.createElement(s,{onClick:this.props.onClick,date:r,inFocussedMonth:r.getMonth()===this.props.month,data:this.state.data.filter(function(e){return e.isSameDay(r)}),key:"CalendarCell_"+r.valueOf()},r.getDate())},this))},this))))}});React.render(React.createElement("div",null,React.createElement("button",{onClick:function(){n.findWhere({summary:"today"}).set({summary:"do something"})}},"change something"),React.createElement("button",{onClick:function(){n.add(new t({date:new Date,summary:"hello"}))}},"add something"),React.createElement(o,{year:(new Date).getFullYear(),month:(new Date).getMonth(),onClick:console.log.bind(console),weekDays:e,data:n})),document.getElementById("calendar"))}();